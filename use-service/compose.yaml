# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  user_service:
    build:
      context: .
    ports:
      - 8080:8080
    environment:
      - spring.datasource.url=jdbc:mysql://user_service_db:3306/bms
    networks:
      - app-network
    depends_on:
       db:
         condition: service_healthy
  db:
    container_name: user_service_db
    image: mysql:8.0
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=bms
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_USER=db_user
      - MYSQL_PASSWORD=secret
    networks:
      - app-network
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 1s
      timeout: 20s
      retries: 10
      start_period: 10s
volumes:
  mysql_data:
    driver: local
networks:
  app-network:


